app.controller('MatchCtrl', ['$scope','$state','$stateParams','$auth','$location','$http', function($scope,$state,$stateParams,$auth,$location,$http){

	var leagueId
	var gameTeamId

	$scope.players = [];

	$scope.storeMatchEvents = [];

	$scope.showMatchEvents = [];

	var i = 0;
	var flashCount = 0;

	$scope.zones = []

	$scope.showStartGame = true;

	$scope.showGoToResults = false;

	$scope.flashing = false;

	$scope.clock = 0;
	$scope.homeTeamScore = 0;
	$scope.awayTeamScore = 0;
	$scope.homeTeamName = "";
	$scope.awayTeamName = "";
	$scope.homeTeamBadge = "";
	$scope.awayTeamBadge = "";
	$scope.homeTeamId = "";
	$scope.awayTeamId = "";
	
	$scope.homeTeamColour1 = "";
	$scope.homeTeamColour2 = "";
	$scope.awayTeamColour1 = "";
	$scope.awayTeamColour2 = "";

	$scope.homeTeamStyle = {	
		'background-color': $scope.homeTeamColour1,
		'color': $scope.homeTeamColour2
	}
	$scope.awayTeamStyle =	{
		'background-color': $scope.awayTeamColour1,
		'color': $scope.awayTeamColour2
	}

	var kitClashes = [
		[1,2,3,9,11,12,13,14,15,20],
		[4,5,6,8],
		[16,17,19],
		[7,18],
		[10]
	]

	$scope.startGame = function(){
		ambient.play();
		$scope.showStartGame = false;
		recursive(1000);
	}

	$scope.goToResults = function(){
		$state.go('header.fixtures', { league_id: leagueId, game_team_id: gameTeamId});
	}


// change the setup so that the all events are loaded buut visible then unhide them as the clock ticks
	var recursive = function(delay){
		$scope.flashing = false;
		if(i < $scope.storeMatchEvents.length){
			setTimeout(function(){
				$scope.clock = $scope.storeMatchEvents[i].time;
				if($scope.storeMatchEvents[i].event_type == 4 && $scope.storeMatchEvents[i].team_id == $scope.homeTeamId){
					$scope.homeTeamScore++;
				} else if ($scope.storeMatchEvents[i].event_type == 4 && $scope.storeMatchEvents[i].team_id == $scope.awayTeamId){
					$scope.awayTeamScore++;
				}
				if($scope.storeMatchEvents[i].team_id == $scope.homeTeamId){
					$scope.storeMatchEvents[i].style = $scope.homeTeamStyle;
				} else if ($scope.storeMatchEvents[i].team_id == $scope.awayTeamId){
					$scope.storeMatchEvents[i].style = $scope.awayTeamStyle;
				}
				$scope.showMatchEvents.unshift($scope.storeMatchEvents[i])
				if($scope.showMatchEvents.length > 20){
					$scope.showMatchEvents.pop()
				}
				udpateZones($scope.storeMatchEvents[i].team_id,$scope.storeMatchEvents[i].possesion_zone);
				$scope.$apply();
				i++;
				if($scope.showMatchEvents[0].event_type == 4){
					cheer.play();
					flash();
					
				} else {
					recursive(delay);
				}
			},delay)
		} else {
			$scope.showGoToResults = true;
			$scope.$apply();
		}
	}

	var matchGet = function(){
		$http({
			method: 'get',
			url: '/api/matches/' + $stateParams.match_id
		}).success(function(resp){
			// console.log(resp);
			$scope.homeTeamId = resp.match.home_team_id;
			$scope.awayTeamId = resp.match.away_team_id;
			$scope.homeTeamName = resp.home_team.name
			$scope.awayTeamName = resp.away_team.name
			$scope.homeTeamBadge = resp.home_team.badge_url
			$scope.awayTeamBadge = resp.away_team.badge_url
			kitClash($scope.homeTeamId,$scope.awayTeamId,resp);
			$scope.homeTeamStyle = {	
				'background-color': $scope.homeTeamColour1,
				'color': $scope.homeTeamColour2,
				'border-color': $scope.homeTeamColour2,
				'border-width': '2px',
				'border-style': 'solid',
				'border-radius': '3px'
			}
			$scope.awayTeamStyle =	{
				'background-color': $scope.awayTeamColour1,
				'color': $scope.awayTeamColour2,
				'border-color': $scope.awayTeamColour2,
				'border-width': '2px',
				'border-style': 'solid',
				'border-radius': '3px'
			}
			generateZones();
			$scope.players = resp.players
			leagueId = resp.league_id
			gameTeamId = resp.game_team_id
			$scope.storeMatchEvents = resp.match_events
			// console.log($scope.awayTeamColour1)
			// console.log($scope.awayTeamStyle)
		})
	}

	var generateZones = function(){
		$scope.zones = [];
		// console.log($scope.zones)
		for(var i = 0; i < 5; i++){
			zone = {};
			zone.style = {'background-color': $scope.homeTeamColour1};
			zone.show = false;
			$scope.zones.push(zone);
		}
		for(var i = 0; i < 4; i++){
			zone = {};
			zone.style = {'background-color': $scope.awayTeamColour1};
			zone.show = false;
			$scope.zones.push(zone);
		}
		$scope.zones[4].show = true;
	}

	var udpateZones = function(team_id,poss_zone){
		if(team_id == $scope.homeTeamId){
			var midpoint = poss_zone + 1;
		} else {
			var midpoint = poss_zone;
		}
		$scope.zones = [];
		for(var i = 0; i < midpoint; i++){
			zone = {};
			zone.style = {'background-color': $scope.homeTeamColour1};
			zone.show = false;
			$scope.zones.push(zone);
		}
		for(var i = midpoint; i < 9; i++){
			zone = {};
			zone.style = {'background-color': $scope.awayTeamColour1};
			zone.show = false;
			$scope.zones.push(zone);
		}
		$scope.zones[poss_zone].show = true;
	}

	var kitClash = function(home_team_id,away_team_id,resp){
		// find which array features the home_team_id
		$scope.homeTeamColour1 = resp.home_team.home_colour_1;
		$scope.homeTeamColour2 = resp.home_team.home_colour_2;
		if(home_team_id % 20 > 0){
			home_source_id = home_team_id % 20;
		} else {
			home_source_id = 20;
		}
		if(away_team_id % 20 > 0){
			away_source_id = away_team_id % 20;
		} else {
			away_source_id = 20;
		}
		for(var i = 0; i < kitClashes.length; i++){
			if(kitClashes[i].indexOf(home_source_id) > -1){
				// console.log(kitClashes[i].indexOf(home_team_id));
				if(kitClashes[i].indexOf(away_source_id) > -1){
					$scope.awayTeamColour1 = resp.away_team.away_colour_1;
					$scope.awayTeamColour2 = resp.away_team.away_colour_2;
				} else {
					$scope.awayTeamColour1 = resp.away_team.home_colour_1;
					$scope.awayTeamColour2 = resp.away_team.home_colour_2;
				}
			}
		}
	}

	var flash = function(){
		console.log('zxcvbnm');
		// var state = true;
		if(flashCount < 40){
			setTimeout(function(){
				if($scope.showMatchEvents[0].team_id == $scope.homeTeamId){
					var style1 = {	
						'background-color': $scope.homeTeamColour1,
						'color': $scope.homeTeamColour2,
						'border-color': $scope.homeTeamColour2,
						'border-width': '2px',
						'border-style': 'solid',
						'border-radius': '3px'
					}
					var style2 = {	
						'background-color': $scope.homeTeamColour2,
						'color': $scope.homeTeamColour1,
						'border-color': $scope.homeTeamColour1,
						'border-width': '2px',
						'border-style': 'solid',
						'border-radius': '3px'
					}
				} else {
					var style1 =	{
						'background-color': $scope.awayTeamColour1,
						'color': $scope.awayTeamColour2,
						'border-color': $scope.awayTeamColour2,
						'border-width': '2px',
						'border-style': 'solid',
						'border-radius': '3px'
					}
					var style2 =	{
						'background-color': $scope.awayTeamColour2,
						'color': $scope.awayTeamColour1,
						'border-color': $scope.awayTeamColour1,
						'border-width': '2px',
						'border-style': 'solid',
						'border-radius': '3px'
					}
				}
				if(flashCount % 2 == 0){
					$scope.showMatchEvents[0].style = style2;
				} else {
					$scope.showMatchEvents[0].style = style1;
				}
				console.log($scope.showMatchEvents[0].style)
				$scope.$apply();
				flashCount++;
				flash();
			},100)
		} else {
			flashCount = 0;
			// ambient.play();
			recursive(1000);
		}
		// for(var i = 0;  i < 39; i++){
		// 	setTimeout(function(){
		// 		if(state){
		// 			$scope.showMatchEvents[0] = style2;
		// 		} else {
		// 			$scope.showMatchEvents[0] = style1;
		// 		}
		// 		state = !state;
		// 		$scope.$apply()
		// 	}, 100)
		// }
	}

	var init = function(){
		matchGet();
		var cheer = new Audio('app/audio/Crowd cheer sound effect.mp3');
		var ambient = new Audio('app/audio/small football crowd by FNC.mp3');
	}

	init();
}])